all: bls_c.js
BLS_DIR?=./bls
MCL_DIR?=$(BLS_DIR)/mcl

EMCC_OPT=-I $(BLS_DIR)/include -I $(MCL_DIR)/src -I $(MCL_DIR)/include -I./bls
EMCC_OPT+=-DBLS_ETH
EMCC_OPT+=-Wall -Wextra
EMCC_OPT+=-O3 -DNDEBUG
EMCC_OPT+=-DMCL_SIZEOF_UNIT=4
EMCC_OPT+=-std=c++03 -fno-threadsafe-statics -fno-rtti -fno-stack-protector
EMCC_OPT+=-flto
EMCC_OPT+=-fno-exceptions
EMCC_OPT+=-DMCLBN_FORCE_EXPORT
EMCC_OPT+=-DMCL_MAX_BIT_SIZE=384
EMCC_OPT+=-DCYBOZU_MINIMUM_EXCEPTION -DCYBOZU_DONT_USE_EXCEPTION -DCYBOZU_DONT_USE_STRING -DMCL_DONT_USE_CSPRNG
EMCC_OPT+=-DMCL_USE_WEB_CRYPTO_API
EMCC_OPT+=-s WASM=1
EMCC_OPT+=-s NO_EXIT_RUNTIME=1
EMCC_OPT+=-s NODEJS_CATCH_EXIT=0
EMCC_OPT+=-s NODEJS_CATCH_REJECTION=0
#EMCC_OPT+=-s ASSERTIONS=1
EMCC_OPT+=-s MODULARIZE=1
#EMCC_OPT+=-s EXPORT_NAME='blsCreateModule'
#EMCC_OPT+=-s STRICT_JS=1
EMCC_OPT+=-s SINGLE_FILE=1
#EMCC_OPT+=-s MINIFY_HTML=0
EMCC_OPT+=--minify 0
EMCC_OPT+=-s ABORTING_MALLOC=0
EMCC_OPT+=-s DISABLE_EXCEPTION_CATCHING=1
EMCC_OPT+=-s STACK_SIZE=1MB

bls_c.js:
	emcc -o $@ $(BLS_DIR)/src/bls_c384_256.cpp $(MCL_DIR)/src/fp.cpp $(EMCC_OPT)
	# disable require fs, path
	perl -i -pe 's@(.* = require\(.*)@//\1@' $@

clean:
	rm -rf bls_c.js

.PHONY: clean bls_c.js

